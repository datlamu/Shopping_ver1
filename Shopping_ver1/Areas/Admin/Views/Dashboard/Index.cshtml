@model DashboardStatsViewModel
@using System.Text.Json
@{
	ViewData["title"] = "Thống kê doanh thu";
	var monthlyLabels = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyLabels));
	var monthlyData = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyData));
	var categoryLabels = @Html.Raw(JsonSerializer.Serialize(Model.CategoryLabels));
	var categoryData = @Html.Raw(JsonSerializer.Serialize(Model.CategoryData));
	var now = DateTime.Now.Year;
}
<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
	<h1 class="h3 mb-0 text-gray-800">Thống kê</h1>
	<a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
		<i class="fas fa-download fa-sm text-white-50 mr-1"></i>Tải báo cáo thống kê - phát triển trong tương lai
	</a>
</div>

<!-- Content Row -->
<div class="row">

	@* Thu nhập tháng này *@
	<div class="col-xl-3 col-md-6 mb-4">
		<div class="card border-left-primary shadow h-100 py-2">
			<div class="card-body">
				<div class="row no-gutters align-items-center">
					<div class="col mr-2">
						<div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
							Doanh thu tháng này
						</div>
						<div class="h5 mb-0 font-weight-bold text-gray-800">@FormatCurrency.ToVnCurrency(Model.MonthlyIncome)</div>
					</div>
					<div class="col-auto">
						<i class="fas fa-calendar fa-2x text-gray-300"></i>
					</div>
				</div>
			</div>
		</div>
	</div>

	@* Thu nhập tháng trước *@
	<div class="col-xl-3 col-md-6 mb-4">
		<div class="card border-left-warning shadow h-100 py-2">
			<div class="card-body">
				<div class="row no-gutters align-items-center">
					<div class="col mr-2">
						<div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
							Doanh thu tháng trước
						</div>
						<div class="h5 mb-0 font-weight-bold text-gray-800">@FormatCurrency.ToVnCurrency(Model.LastMonthIncome)</div>
					</div>
					<div class="col-auto">
						<i class="fas fa-calendar fa-2x text-gray-300"></i>
					</div>
				</div>
			</div>
		</div>
	</div>

	@* Doanh thu năm *@
	<div class="col-xl-3 col-md-6 mb-4">
		<div class="card border-left-info shadow h-100 py-2">
			<div class="card-body">
				<div class="row no-gutters align-items-center">
					<div class="col mr-2">
						<div class="text-xs font-weight-bold text-info text-uppercase mb-1">
							Doanh thu năm
						</div>
						<div class="h5 mb-0 font-weight-bold text-gray-800">@FormatCurrency.ToVnCurrency(Model.YearlyIncome)</div>
					</div>
					<div class="col-auto">
						<i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
					</div>
				</div>
			</div>
		</div>
	</div>

	@* Tăng trưởng doanh thu theo tuần *@
	<div class="col-xl-3 col-md-6 mb-4">
		<div class="card border-left-success shadow h-100 py-2">
			<div class="card-body">
				<div class="row no-gutters align-items-center">
					<div class="col mr-2">
						<div class="text-xs font-weight-bold text-success text-uppercase mb-1" title="So sánh với tháng trước">
							Tăng trưởng doanh thu
						</div>
						<div class="h5 mb-0 font-weight-bold text-gray-800">
							@Model.MonthlyRevenueGrowthText
						</div>
					</div>
					<div class="col-auto">
						<i class="fas fa-chart-line fa-2x text-gray-300"></i>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Content Row -->

<div class="row">

	<!-- Area Chart -->
	<div class="col-xl-8 col-lg-7">
		<div class="card shadow mb-4">
			<!-- Card Header - Dropdown -->
			<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
				<h6 class="m-0 font-weight-bold text-primary">Biểu đồ doanh thu năm @now</h6>
				<div class="dropdown no-arrow">
					<a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
					   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
					</a>
					<div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
						 aria-labelledby="dropdownMenuLink">
						<div class="dropdown-header">Phát triển trong tương lai:</div>
						<a class="dropdown-item" href="#">...</a>
						<a class="dropdown-item" href="#">...</a>
						<div class="dropdown-divider"></div>
						<a class="dropdown-item" href="#">...</a>
					</div>
				</div>
			</div>
			<!-- Card Body -->
			<div class="card-body" style="height: 360px;">
				<div class="chart-area">
					<canvas id="myAreaChart"></canvas>
				</div>
			</div>
		</div>
	</div>

	<!-- Pie Chart -->
	<div class="col-xl-4 col-lg-5">
		<div class="card shadow mb-4">
			<!-- Card Header - Dropdown -->
			<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
				<h6 class="m-0 font-weight-bold text-primary">Biểu đồ thể loại có doanh thu cao</h6>
				<div class="dropdown no-arrow">
					<a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
					   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
					</a>
					<div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
						 aria-labelledby="dropdownMenuLink">
						<div class="dropdown-header">Phát triển trong tương lai:</div>
						<a class="dropdown-item" href="#">...</a>
						<a class="dropdown-item" href="#">...</a>
						<div class="dropdown-divider"></div>
						<a class="dropdown-item" href="#">...</a>
					</div>
				</div>
			</div>
			<!-- Card Body -->
			<div class="card-body" style="height: 360px;">
				<div class="chart-pie pt-4 pb-2">
					<canvas id="myPieChart"></canvas>
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script>
		// Area Chart
		const areaCtx = document.getElementById("myAreaChart").getContext("2d");

		new Chart(areaCtx, {
			type: 'line',
			data: {
				labels: @monthlyLabels,
				datasets: [{
					label: "Doanh thu",
					data: @monthlyData,
					backgroundColor: "rgba(78, 115, 223, 0.05)",
					borderColor: "rgba(78, 115, 223, 1)",
					pointBackgroundColor: "rgba(78, 115, 223, 1)",
					pointBorderColor: "rgba(78, 115, 223, 1)",
					pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
					pointHoverBorderColor: "rgba(78, 115, 223, 1)",
					pointRadius: 3,
					pointHoverRadius: 3,
					pointBorderWidth: 2,
					tension: 0.4
				}]
			},
			options: {
				responsive: true,
				maintainAspectRatio: false,
				scales: {
					x: { grid: { display: false } },
					y: {
						beginAtZero: true,
						ticks: {
							maxTicksLimit: 8,
							callback: value =>
								new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value)
						}
					}
				}
			}
		});

		// Pie Chart
		const pieCtx = document.getElementById("myPieChart").getContext("2d");

		new Chart(pieCtx, {
			type: 'doughnut',
			data: {
				labels: @categoryLabels,
				datasets: [{
					data: @categoryData,
					backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b'],
					hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf', '#f4b619', '#c0392b'],
					hoverBorderColor: "rgba(234, 236, 244, 1)"
				}]
			},
			options: {
				maintainAspectRatio: false,
				plugins: {
					legend: { position: 'bottom' },
					tooltip: {
						callbacks: {
							label: context =>
								new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.parsed)
						}
					}
				},
				cutout: '70%'
			}
		});
	</script>
}
